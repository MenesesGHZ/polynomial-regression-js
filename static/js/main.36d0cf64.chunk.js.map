{"version":3,"sources":["polynomial_regression/PolynomialRegression.js","components/Graph.js","assets/grid.png","components/Drawer.js","components/RegressionSetup.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["PolynomialRegression","this","expression","coefficients","Array","degree","NaN","f","x","X","y","n","length","x_pow_deg","s_xiy","i","push","map","math","el","A","_data","j","coef","concat","join","error","console","isArray","Chart","require","Graph","props","model","chartRef","React","createRef","plot","fit","plot_update","train","deg","data","regression_points","predict","chart","datasets","label","String","pointBackgroundColor","color","type","function","borderColor","fill","update","current","className","style","width","ref","Component","Drawer","state","hoverMode","height","e","setState","parseFloat","nativeEvent","offsetX","toFixed","offsetY","addCoord","coord","onClick","toggleHoverMode","bind","resetCoords","onMouseMove","backgroundColor","backgroundImage","grid","RegressionSetup","orders","order_graph_1","order_graph_2","event","target","name","parseInt","value","setOrders","Object","values","onChange","min","max","Main","x_array","y_array","color_graph_1","color_graph_2","new_x_array","new_y_array","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36d0cf64.chunk.js","sourcesContent":["import * as math from \"mathjs\";\n/**\n * ---------------------------------------------------------\n *\n * \tThis Polynomial Regression model only supports having one single \n * \tcharacteristic as a dependent variable for yielding one response.\n * \t\n * \tIMPORTANT: It is not have been implemented for multiple characteristics. \n * \t\n * \tThus you can feed the model with a row vector of features, and in the same way,\n * \tthe labels must be row vector where each element represent the label itself.\t   \n * \t\n * \tTheory recovered from -> \n * \t\tBook:`Chapra-Canale:Numerical Methods for Engineers, Sixth Edition`;\n * \t\tchapter: `Least-Squares Regression #17`; pag:`470`;\n *\n * ----------------------------------------------------------\n */\nclass PolynomialRegression{\n\tconstructor(){\n\t\tthis.expression = \"f(x) = undefined\";\n\t\tthis.coefficients = new Array(); \n\t\tthis.degree = NaN;\n\t\tthis.f = (x) => 0;\n\t}\t\n\n\ttrain(X,y,degree=1){\n\t\ttry {\n\t\t\tconst n = X.length;\n\t\t\tlet x_pow_deg = new Array(),\n\t\t\t\ts_xiy = new Array();\n\t\t\tthis.degree = degree;\n\n\t\t\t// computing sum of Xs to the power of `i` -> [ X^0, X^1, ... , X^i ], and computing sums\n\t\t\tfor(let i=0;i<=this.degree;i++){\n\t\t\t\tx_pow_deg.push(X.map(x=>x**i));\n\t\t\t\ts_xiy.push(math.multiply(x_pow_deg[i],y));\n\t\t\t}\n\n\t\t\t//computing remaining sums for solving the `m+1` linear equations, where `m` is equal to the number of coeficients; m=this.degree\n\t\t\tfor(let i=this.degree+1; i<=2*this.degree;i++) \n\t\t\t\tx_pow_deg.push(X.map(el=>el**i)); \n\n\t\t\t//fixing equation; Ax = b -> A*s_xiy = coef\t\n\t\t\tlet A = math.zeros(this.degree+1,this.degree+1)._data\n\t\t\tfor(let i=0;i<=this.degree;i++)\n\t\t\t\tfor(let j=0;j<=this.degree;j++)\n\t\t\t\t\tA[i][j] = math.sum(x_pow_deg[j+i]);\n\t\t\tA[0][0] = n;\n\n\t\t\t//solve linear equation Ax = b |  modeling f(x) in JS  |  fomating mathematical expression of the model\n\t\t\tthis.coefficients = math.lusolve(math.lup(A),s_xiy)._data;\n\t\t\tthis.f = (x) =>{\n\t\t\t\treturn math.sum(this.coefficients.map((coef,i)=>coef*(x**i)))\n\t\t\t};\n\t\t\tthis.expression = \"f(x) = \".concat(\n\t\t\t\tthis.coefficients.map((el,i)=> i===0? `${el}`:` + (${el}x^${i})` ).join(\"\")\n\t\t\t);\n\n\t\t} catch (error) {\n\t\t\t// Error: Linear system cannot be solved since matrix is singular. |Matrix|=Det(Matrix)=0\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\n\tpredict(X){\n\t\tconst response = Array.isArray(X)? X.map((x)=>this.f(x)) : this.f(X);\n\t\treturn response;\n\t}\n}\n\nexport default PolynomialRegression;\n","import React from \"react\";\nimport {render} from \"react-dom\";\nimport PolynomialRegression from \"../polynomial_regression/PolynomialRegression\";\nconst Chart = require('chart.js');\n\n/*-----------------------------------------------------\n *\n *\tThis component plot the selected coordinates, and it draws the polynomial model. \n *\tThis two main functionalities are done whenever the user adds new points or resets the graph.\n *\t\n * ----------------------------------------------------\n */\n\nclass Graph extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.model = new PolynomialRegression();\n\t\tthis.chartRef = React.createRef();\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.plot();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.fit()\n\t\tthis.plot_update();\n\t}\n\n\tfit(){\n\t\t// if there is no data: reset the model; else: train the model\n\t\tif(this.props.x.length==0 && this.props.y.length==0)\n\t\t\tthis.model = new PolynomialRegression();\n\t\telse\n\t\t\tthis.model.train(this.props.x,this.props.y,this.props.deg);\n\t}\n\t\t\t\t\n\t\n\tplot_update(){\n\t\tlet data = new Array(),\n\t\t\tregression_points = new Array();\n\t\tfor(let i=0;i<this.props.x.length;i++){\n\t\t\tdata.push(\n\t\t\t\t{x:this.props.x[i],y:this.props.y[i]}\n\t\t\t);\n\t\t}\n\t\tfor(let i=0;i<1;i+=0.05){\n\t\t\tregression_points.push({x:i,y:this.model.predict(i)});\n\t\t}\n\t\tthis.chart.data.datasets[0].data = data;\n\t\tthis.chart.data.datasets[0].label = `Polynomial Degree: ${String(this.props.deg)}`;\n\t\tthis.chart.data.datasets[0].pointBackgroundColor.push(this.props.color);\n\t\tthis.chart.data.datasets[1] =  {\n\t\t\ttype:'line',\n\t\t\tlabel: this.model.expression,\n\t\t\tfunction: function(x){return this.model.predict(x)},\n\t\t\tdata: regression_points,\n\t\t\tborderColor: \"rgba(0,0,255,1)\",\n\t\t\tfill: false \n\t\t}\n\t\tthis.chart.update();\n\t}\n\t\n\n\tplot(){\n\t\tthis.chart = new Chart(this.chartRef.current, {\n\t\t\ttype:'scatter',\n\t\t\tdata:{\n\t\t\t\tdatasets:[{\n\t\t\t\t\tlabel:`Polynomial Degree: ${String(this.props.deg)}`,\n\t\t\t\t\tdata:new Array(),\n\t\t\t\t\tfill: false, \n\t\t\t\t\tpointBackgroundColor:new Array()\n\t\t\t\t}]\n\t\t\t}\n\t\t});\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"w-100 d-flex justify-content-center\">\n\t\t\t\t<div className=\"h-auto\" style={{width:this.props.width}}>\n\t\t\t\t\t<canvas ref={this.chartRef}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\nexport default Graph;\n","export default __webpack_public_path__ + \"static/media/grid.fa990d41.png\";","import React from \"react\";\nimport {render} from \"react-dom\";\nimport grid from \"../assets/grid.png\";\n\n/*-----------------------------------------------------\n *\n *\tThis component changes the state of the `x_array` and `y_array`\n *\tsending a pair of (x,y) coordinate to the setCoords() from the <Main/>. \n *\tThe coordinates are normalized with respect from the `width` and `height`.\n *\tAlso the component renders the current hover coords. \n *\tWhereas when the user makes a click on the grid, it adds the hover coords (x,y) respectively.\n *\tIf the component has `hoverMode=True`, the user does not need to click in order to add a coord.\n *\t\n * ----------------------------------------------------\n */\n\t\nclass Drawer extends React.Component{\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {x:NaN,y:NaN,hoverMode:false};\n\t\tthis.width = this.height = 400;\n\t}\n\n\tonMouseMove(e){\n\t \tthis.setState({ x: parseFloat((e.nativeEvent.offsetX/this.width).toFixed(3)),\n\t\t\t\ty: parseFloat(((this.height-e.nativeEvent.offsetY)/this.height).toFixed(3))},\n\t\t\t()=>{if(this.state.hoverMode) this.addCoord()}\n\t\t);\t\n\t}\n\n\ttoggleHoverMode(){\n\t\tthis.setState({hoverMode:!this.state.hoverMode});\n\t}\n\t\n\taddCoord(){\n\t\tconst coord = {x:this.state.x,\n\t\t               y:this.state.y};\n\t\tthis.props.addCoord(coord); \n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div className=\"row mb-4\">\n\t\t\t\t\t<div className=\"col-6 d-flex justify-content-center\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>Hover Mode: [{this.state.hoverMode?\"ON\":\"OFF\"}]</p>\n\t\t\t\t\t\t<div className=\"w-100 d-flex justify-content-center\">\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-success\" onClick={this.toggleHoverMode.bind(this)}>toggle</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-6 d-flex justify-content-center\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>Reset Button:</p>\n\t\t\t\t\t\t<div className=\"w-100 d-flex justify-content-center\">\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={this.props.resetCoords}>reset</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t<div  onMouseMove={(e)=>this.onMouseMove(e)}  \n\t\t\t\t\t\tstyle={{width:this.width,height:this.height,backgroundColor:\"rgba(100,100,100,0.1)\",backgroundImage:`url(${grid})`}}\n\t\t\t\t\t\tonClick={this.addCoord.bind(this)}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row mt-2\">\n\t\t\t\t\t<div className=\"col-6 d-flex justify-content-center\">\n\t\t\t\t\t\t<p>X: {this.state.x}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-6 d-flex justify-content-center\">\n\t\t\t\t\t\t<p>Y: {this.state.y}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\t\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default Drawer;\n","import React from \"react\";\nimport {render} from \"react-dom\";\n\n/*-----------------------------------------------------\n *\n *\tThis componnet it only changes \n *\tthe state of the `order` for each <Graph/>\n *\n * ----------------------------------------------------\n */\n\nclass RegressionSetup extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.orders = {\n\t\t\t\"order_graph_1\":this.props.order_graph_1,\n\t\t\t\"order_graph_2\":this.props.order_graph_2\n\t\t}; \n\t}\n\t\n\tsetOrders(event){\n\t\tthis.orders[event.target.name] = parseInt(event.target.value);\n\t\tthis.props.setOrders(Object.values(this.orders));\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t<p className=\"text-center\">Order of first model: </p>\n\t\t\t\t\t<div className=\"w-100 d-flex justify-content-center\">\n\t\t\t\t\t\t<input className=\"text-center\" name=\"order_graph_1\" type=\"number\" value={this.props.order_graph_1} onChange={this.setOrders.bind(this)} min=\"1\" max=\"10\"/>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t<p className=\"text-center\">Order of second model: </p>\n\t\t\t\t\t<div className=\"w-100 d-flex justify-content-center\">\n\t\t\t\t\t\t<input className=\"text-center\"name=\"order_graph_2\" type=\"number\" value={this.props.order_graph_2} onChange={this.setOrders.bind(this)} min=\"1\" max=\"10\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default RegressionSetup;\n\t\n","import React from \"react\";\nimport {render} from \"react-dom\";\nimport Graph from \"./Graph\";\nimport Drawer from \"./Drawer\";\nimport RegressionSetup from \"./RegressionSetup\";\n\n/*-----------------------------------------------------\n *\n *\tThis component is in charge to update the state of the `x_array` and `y_array`\n *\treceving the coordinates from the <Drawer/> component.\n *\tAlso it handles the `order` of each polynomial model that it is received from the <RegressionSetup/>\n *\tcomponent.\n *\n * ----------------------------------------------------\n */\n \nclass Main extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tx_array: new Array(),\n\t\t\ty_array: new Array(),\n\t\t\torder_graph_1:1,\n\t\t\torder_graph_2:2,\n\t\t};\n\t\tthis.color_graph_1 = \"rgb(255,0,0)\";\n\t\tthis.color_graph_2 = \"rgb(0,255,0)\";\n\t}\n\n\taddCoord(coord){\n\t\tconst new_x_array = this.state.x_array.concat(coord.x);\n\t\tconst new_y_array = this.state.y_array.concat(coord.y);\n\t\tthis.setState({\n\t\t\tx_array:new_x_array,\n\t\t\ty_array:new_y_array\n\t\t});\n\t}\n\t\n\tresetCoords(){\n\t\tthis.setState({x_array:new Array(), y_array:new Array()});\n\t}\n\n\tsetOrders(orders){\n\t\tthis.setState({\n\t\t\torder_graph_1:orders[0],\n\t\t\torder_graph_2:orders[1]\n\t\t});\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"container-fluid pt-4\">\n\t\t\t\t<div className=\"row justify-content-center\">\n\t\t\t\t\t<div className=\"col-12 col-sm-12 col-md-12 col-lg-4 \">\n\t\t\t\t\t\t<Drawer addCoord={this.addCoord.bind(this)} resetCoords={this.resetCoords.bind(this)}/>\n\t\t\t\t\t\t<RegressionSetup order_graph_1={this.state.order_graph_1} order_graph_2={this.state.order_graph_2} setOrders={this.setOrders.bind(this)} /> \t\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-12 col-sm-12 col-md-12 col-lg-8\">\n\t\t\t\t\t\t<Graph x={this.state.x_array} y={this.state.y_array} deg={this.state.order_graph_1} width={800} color={this.color_graph_1} />\n\t\t\t\t\t\t<Graph x={this.state.x_array} y={this.state.y_array} deg={this.state.order_graph_2} width={800} color={this.color_graph_2} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t);\n\n\t}\n}\n\nexport default Main;\n","import React from \"react\";\nimport {render} from \"react-dom\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n\t  <div className=\"App\">\n\t \t <Main/>\n\t  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}